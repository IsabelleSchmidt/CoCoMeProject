@page "{id}"
@model StoreServer.Pages.Orders.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Accept Delivery</h1>

<h4>Order</h4>
<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.ID)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.ID)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Order.OrderDate)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Order.OrderDate)
    </dd>
</dl>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Count
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderItem) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemIdentifier.Name)
                </td>
                <td>
                    <div class="form-group">
                        <input asp-for="@item.Count" class="form-control" style="width:100px" readonly/>
                        <span asp-validation-for="OrderItem.Count" class="text-danger"></span>
                    </div>                                
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
<a asp-route-orderId=@Model.Order.ID asp-page-handler="AcceptOrder">Accept Order</a>

</div>
<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
